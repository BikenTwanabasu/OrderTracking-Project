@model IEnumerable<CollegeProject.Models.AgentTaskModel>
@using Newtonsoft.Json
@using System.Linq
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>Admin Dashboard – Gaubesi</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- Fonts & Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" />

    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <!-- Dashboard CSS -->
	<link href="~/css/admindashboard.css" rel="stylesheet" />
</head>
<body>
    <div class="MainDiv">
        <!-- Navbar -->
        <nav class="nav">
            <div class="logo">
                <img src="https://gaaubesi.com/static/assets/images/LOGO.gif" alt="Gaubesi Logo" />
            </div>
            <ul class="nav-links">
                <li><a asp-controller="Admin" asp-action="AdminDashboard">Home</a></li>
                <li><a asp-controller="Project" asp-action="AdminRegistration">Register</a></li>
                <li><a asp-controller="Admin" asp-action="GetAdminsHistoryList">Past Deliveries</a></li>
                <li><a asp-controller="Admin" asp-action="GetAdminsPresentList">Live Deliveries</a></li>
                <li><a asp-controller="Admin" asp-action="AgentRegistrationApprovalRequest">Agent Approval</a></li>
                <li><a asp-controller="Admin" asp-action="VendorRegistrationApprovalRequest">Vendor Approval</a></li>
                <li><a asp-controller="Log" asp-action="Logout">Logout</a></li>
            </ul>
        </nav>

        <!-- Welcome Banner -->
        <div class="admin-welcome">
            <h1>Welcome</h1>
            <h2>@ViewBag.Name</h2>
        </div>

        
        <div class="summary-cards">
            <div class="card">
                <i class="fas fa-boxes"></i>
                <div class="info">
                    <h3>Total Orders</h3>
                    <p>@(Model?.Count() ?? 0)</p>
                </div>
            </div>
            <div class="card">
                <i class="fas fa-truck-loading"></i>
                <div class="info">
                    <h3>Live Deliveries</h3>
                    <p>@(Model?.Count(x => x.DeliveryStatus != "Successfully Delivered") ?? 0)</p>
                </div>
            </div>
            <div class="card">
                <i class="fas fa-clipboard-list"></i>
                <div class="info">
                    <h3>Past Deliveries</h3>
                    <p>@(Model?.Count(x => x.DeliveryStatus == "Successfully Delivered") ?? 0)</p>
                </div>
            </div>
        </div>
        <section class="performance-chart">
            <h3 id="chartTitle">Delivery Distribution</h3>
            <canvas id="deliveryChart"></canvas>
        </section>

        <script>
            const totalCount = @(Model?.Count() ?? 0);
            const liveCount  = @(Model?.Count(x => x.DeliveryStatus != "Successfully Delivered") ?? 0);
            const pastCount  = @(Model?.Count(x => x.DeliveryStatus == "Successfully Delivered") ?? 0);

            const ctx = document.getElementById('deliveryChart').getContext('2d');
            const chart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Total Orders', 'Live Deliveries', 'Past Deliveries'],
                    datasets: [{
                        data: [totalCount, liveCount, pastCount],
                        backgroundColor: [
                            '#d80000',
                            '#ffa500',
                            '#4caf50'
                        ],
                        borderColor: '#fff',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        </script>

        <!-- Footer -->
        <footer class="footer">
            <div class="footer-column">
                <h4>About Gaubesi</h4>
                <p>Your trusted delivery partner across Nepal.</p>
            </div>
            <div class="footer-column">
                <h4>Quick Links</h4>
                <ul>
                    <li><a asp-controller="Admin" asp-action="AdminDashboard">Home</a></li>
                    <li><a asp-controller="Admin" asp-action="GetAdminsHistoryList">Past Deliveries</a></li>
                    <li><a asp-controller="Admin" asp-action="GetAdminsPresentList">Live Deliveries</a></li>
                    <li><a asp-controller="Admin" asp-action="AgentRegistrationApprovalRequest">Agent Approval</a></li>
                    <li><a asp-controller="Admin" asp-action="VendorRegistrationApprovalRequest">Vendor Approval</a></li>
                </ul>
            </div>
            <div class="footer-column">
                <h4>Contact</h4>
                <p>Email: support@gaubesi.com</p>
                <p>Phone: +977-9843127642</p>
            </div>
        </footer>
    </div>

    <script>
        const labels = @(ViewBag.ChartLabels != null
            ? Html.Raw(JsonConvert.SerializeObject(ViewBag.ChartLabels))
            : "[]");
        const totalData = @(ViewBag.TotalSeries != null
            ? Html.Raw(JsonConvert.SerializeObject(ViewBag.TotalSeries))
            : "[]");
        const liveData = @(ViewBag.LiveSeries != null
            ? Html.Raw(JsonConvert.SerializeObject(ViewBag.LiveSeries))
            : "[]");
        const pastData = @(ViewBag.PastSeries != null
            ? Html.Raw(JsonConvert.SerializeObject(ViewBag.PastSeries))
            : "[]");

        const ctx = document.getElementById('deliveryChart').getContext('2d');
        let chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Total Orders', 'Live Deliveries', 'Past Deliveries'],
                datasets: [{
                    data: [
                        totalData.reduce((a, b) => a + b, 0),
                        liveData.reduce((a, b) => a + b, 0),
                        pastData.reduce((a, b) => a + b, 0)
                    ],
                    backgroundColor: ['#d80000', '#ff9900', '#009900']
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    </script>
</body>
</html>
